name: 'Simple Workflow Metrics'
description: 'Collects basic workflow metrics without requiring GitHub API calls'

runs:
  using: 'composite'
  steps:
    - name: Collect Basic Workflow Metrics
      shell: bash
      run: |
        # Create metrics directory
        mkdir -p metrics
        
        # Get current timestamp
        CURRENT_TIME=$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")
        
        # Create basic metrics JSON (similar to your screenshot format)
        cat > metrics/workflow_metrics.json << 'EOF'
        {
          "data": {
            "workflow_name": "${{ github.workflow }}",
            "job_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "start_time": "${{ github.event.head_commit.timestamp }}",
            "end_time": "CURRENT_TIME_PLACEHOLDER",
            "duration": "calculated_duration",
            "status": "completed"
          },
          "stderr": {
            "file": "workflow_log.txt",
            "error": "Process completed with exit code 0."
          },
          "stdout": {
            "workflow_info": {
              "steps": {
                "code": [
                  "echo \"${{ github.workflow }}\"",
                  "echo \"workflow completed\""
                ]
              },
              "output": [
                "WORKFLOW_START_TIME: ${{ github.event.head_commit.timestamp }}",
                "WORKFLOW_END_TIME: CURRENT_TIME_PLACEHOLDER",
                "REPOSITORY: ${{ github.repository }}",
                "RUN_ID: ${{ github.run_id }}",
                "RUN_NUMBER: ${{ github.run_number }}",
                "ACTOR: ${{ github.actor }}",
                "EVENT: ${{ github.event_name }}",
                "REF: ${{ github.ref }}",
                "SHA: ${{ github.sha }}",
                "workflow_metrics_collected"
              ]
            }
          }
        }
        EOF
        
        # Replace placeholder with actual current time
        sed -i "s/CURRENT_TIME_PLACEHOLDER/$CURRENT_TIME/g" metrics/workflow_metrics.json
        
        # Calculate duration if possible
        if [ -n "${{ github.event.head_commit.timestamp }}" ]; then
          START_TIME="${{ github.event.head_commit.timestamp }}"
          START_EPOCH=$(date -d "$START_TIME" +%s 2>/dev/null || echo "0")
          CURRENT_EPOCH=$(date +%s)
          DURATION=$((CURRENT_EPOCH - START_EPOCH))
          sed -i "s/calculated_duration/${DURATION}s/g" metrics/workflow_metrics.json
        else
          sed -i "s/calculated_duration/unknown/g" metrics/workflow_metrics.json
        fi
        
        # Create a simple log file
        cat > metrics/workflow_log.txt << EOF
        Workflow: ${{ github.workflow }}
        Repository: ${{ github.repository }}
        Run ID: ${{ github.run_id }}
        Run Number: ${{ github.run_number }}
        Triggered by: ${{ github.actor }}
        Event: ${{ github.event_name }}
        Branch/Ref: ${{ github.ref }}
        Commit SHA: ${{ github.sha }}
        Timestamp: $CURRENT_TIME
        Status: Completed
        EOF
        
        # Display the metrics (similar to your screenshot format)
        echo "ðŸ“Š Workflow Metrics Collection"
        echo "================================"
        echo "Workflow: ${{ github.workflow }}"
        echo "Repository: ${{ github.repository }}"
        echo "Run: #${{ github.run_number }} (ID: ${{ github.run_id }})"
        echo "Triggered by: ${{ github.actor }} via ${{ github.event_name }}"
        echo "Branch/Ref: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        echo "Collected at: $CURRENT_TIME"
        echo "Status: Success"
        echo ""
        
        # Show the JSON content
        echo "ðŸ“‹ Metrics Data:"
        cat metrics/workflow_metrics.json | sed 's/^/ /'
        
        echo ""
        echo "âœ… Metrics collection completed successfully"

    - name: Upload Simple Metrics
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: simple-workflow-metrics-${{ github.run_id }}
        path: metrics/
        retention-days: 30

    - name: Metrics Summary
      shell: bash
      if: always()
      run: |
        echo "::notice title=Workflow Metrics::Simple workflow metrics collected and uploaded"
        echo "::group::ðŸ“Š Summary"
        echo "Workflow: ${{ github.workflow }}"
        echo "Run ID: ${{ github.run_id }}"
        echo "Status: Completed"
        echo "Artifacts: Uploaded for 30 days"
        echo "::endgroup::"
